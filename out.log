
import os...
cat_serachParm 搜索最佳参数 .......
cat_serachParm iter_cnt: 55
rf_searchParam 搜索最佳参数 .......
rf_searchParam n_estimators: 50
lgb_searchParam 搜索最佳参数 .......
lgb_searchParam n_estimators: 40
rf_searchParam 搜索最佳参数 [50, 5, 10] 0.8307757520780702
rf_searchParam 搜索最佳参数 [50, 5, 11] 0.836265441664569
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.03] 0.7796278110041628
rf_searchParam 搜索最佳参数 [50, 5, 12] 0.836670058574538
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.08] 0.7920949332069529
rf_searchParam 搜索最佳参数 [50, 6, 11] 0.8374767115321429
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.1] 0.7954584853646341
rf_searchParam 搜索最佳参数 [50, 6, 15] 0.8375805369746029
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.15] 0.8115353582043033
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.2] 0.8202136264950327
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.25] 0.8299362465413098
cat_serachParm 搜索最佳参数  [55, 0.03, 5] 0.8260556990667851
cat_serachParm 搜索最佳参数  [55, 0.03, 6] 0.8292058038444641
rf_searchParam 搜索最佳参数 [50, 20, 13] 0.837881632261637
rf_searchParam n_estimators: 55
rf_searchParam 搜索最佳参数 [55, 5, 12] 0.8386559218928253
cat_serachParm 搜索最佳参数  [55, 0.03, 7] 0.8365906264024634
rf_searchParam 搜索最佳参数 [55, 17, 12] 0.8389383887931343
cat_serachParm 搜索最佳参数  [55, 0.03, 8] 0.8389377193957424
rf_searchParam n_estimators: 57
rf_searchParam 搜索最佳参数 [57, 5, 12] 0.8399137020672176
lgb_searchParam 搜索最佳参数 [40, 7, 40, 0.25] 0.8314480315724512
rf_searchParam n_estimators: 60
lgb_searchParam 搜索最佳参数 [40, 7, 45, 0.25] 0.8354238194714788
rf_searchParam n_estimators: 65
cat_serachParm 搜索最佳参数  [55, 0.035, 8] 0.8418323563765903
rf_searchParam 搜索最佳参数 ....... over [57, 5, 12] 0.8399137020672176
rf  model = RandomForestClassifier(max_depth=12, min_samples_split=5, n_estimators=57,
                       oob_score=True, random_state=2020) 第1次验证的f1:0.821782178217822
rf  model = RandomForestClassifier(max_depth=12, min_samples_split=5, n_estimators=57,
                       oob_score=True, random_state=2020) 第2次验证的f1:0.8423645320197045
rf  model = RandomForestClassifier(max_depth=12, min_samples_split=5, n_estimators=57,
                       oob_score=True, random_state=2020) 第3次验证的f1:0.8514851485148514
rf  model = RandomForestClassifier(max_depth=12, min_samples_split=5, n_estimators=57,
                       oob_score=True, random_state=2020) 第4次验证的f1:0.8358974358974359
rf  model = RandomForestClassifier(max_depth=12, min_samples_split=5, n_estimators=57,
                       oob_score=True, random_state=2020) 第5次验证的f1:0.8480392156862745
rf  mean f1: 0.8399137020672176
cat_serachParm 搜索最佳参数  [55, 0.04, 8] 0.8446623116898313
lgb_searchParam n_estimators: 45
lgb_searchParam 搜索最佳参数 [45, 7, 45, 0.25] 0.8355039926506234
cat_serachParm 搜索最佳参数  [55, 0.05, 8] 0.8459985557028158
lgb_searchParam n_estimators: 50
cat_serachParm 搜索最佳参数  [55, 0.06, 8] 0.847165622320058
cat_serachParm iter_cnt: 60
lgb_searchParam n_estimators: 55
lgb_searchParam 搜索最佳参数 [55, 8, 55, 0.2] 0.8356238792775258
lgb_searchParam n_estimators: 60
lgb_searchParam 搜索最佳参数 [60, 8, 55, 0.2] 0.8359646908648397
lgb_searchParam n_estimators: 65
lgb_searchParam n_estimators: 70
cat_serachParm 搜索最佳参数  [60, 0.065, 8] 0.847268449067129
cat_serachParm iter_cnt: 70
lgb_searchParam 搜索最佳参数 ....... over [60, 8, 55, 0.2] 0.8359646908648397
lgb  model = LGBMClassifier(is_unbalance=True, learning_rate=0.2, max_depth=8,
               n_estimators=60, num_leaves=55, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第1次验证的f1:0.8314087759815244
lgb  model = LGBMClassifier(is_unbalance=True, learning_rate=0.2, max_depth=8,
               n_estimators=60, num_leaves=55, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第2次验证的f1:0.8465116279069766
lgb  model = LGBMClassifier(is_unbalance=True, learning_rate=0.2, max_depth=8,
               n_estimators=60, num_leaves=55, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第3次验证的f1:0.8264840182648402
lgb  model = LGBMClassifier(is_unbalance=True, learning_rate=0.2, max_depth=8,
               n_estimators=60, num_leaves=55, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第4次验证的f1:0.8467153284671532
lgb  model = LGBMClassifier(is_unbalance=True, learning_rate=0.2, max_depth=8,
               n_estimators=60, num_leaves=55, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第5次验证的f1:0.8287037037037036
lgb  mean f1: 0.8359646908648397
cat_serachParm 搜索最佳参数  [70, 0.06, 7] 0.8473627860221258
cat_serachParm 搜索最佳参数  [70, 0.065, 8] 0.8474871744411975
cat_serachParm iter_cnt: 80
cat_serachParm 搜索最佳参数  [80, 0.06, 7] 0.848495054990426
cat_serachParm 搜索最佳参数 ....... over [80, 0.06, 7] 0.848495054990426
cat  model = <catboost.core.CatBoostClassifier object at 0x1a1f716550> 第1次验证的f1:0.8229426433915212
cat  model = <catboost.core.CatBoostClassifier object at 0x1a1f716550> 第2次验证的f1:0.8648648648648649
cat  model = <catboost.core.CatBoostClassifier object at 0x1a1f716550> 第3次验证的f1:0.8620689655172413
cat  model = <catboost.core.CatBoostClassifier object at 0x1a1f716550> 第4次验证的f1:0.844559585492228
cat  model = <catboost.core.CatBoostClassifier object at 0x1a1f716550> 第5次验证的f1:0.8480392156862745
cat  mean f1: 0.848495054990426
 select topK 35 train ---------------------
cat_serachParm 搜索最佳参数 .......
cat_serachParm iter_cnt: 55
rf_searchParam 搜索最佳参数 .......
rf_searchParam n_estimators: 50
lgb_searchParam 搜索最佳参数 .......
lgb_searchParam n_estimators: 40
rf_searchParam 搜索最佳参数 [50, 5, 10] 0.8338534611047266
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.03] 0.7767538388709486
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.05] 0.7799985777337892
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.08] 0.7892451088217207
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.1] 0.8007171182828681
rf_searchParam 搜索最佳参数 [50, 5, 15] 0.8354612154723062
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.15] 0.8140968592595178
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.2] 0.8209680593555353
lgb_searchParam 搜索最佳参数 [40, 6, 40, 0.25] 0.8245942647910676
cat_serachParm 搜索最佳参数  [55, 0.03, 5] 0.8243456307255828
lgb_searchParam 搜索最佳参数 [40, 6, 45, 0.2] 0.8265562410613152
lgb_searchParam 搜索最佳参数 [40, 6, 45, 0.25] 0.8308742573701714
rf_searchParam 搜索最佳参数 [50, 8, 15] 0.8357239114352757
rf_searchParam 搜索最佳参数 [50, 10, 11] 0.8376590258907053
cat_serachParm 搜索最佳参数  [55, 0.03, 6] 0.8304308442654013
cat_serachParm 搜索最佳参数  [55, 0.03, 7] 0.8390081978095829
rf_searchParam n_estimators: 55
cat_serachParm 搜索最佳参数  [55, 0.035, 7] 0.8397195076456848
lgb_searchParam 搜索最佳参数 [40, 7, 45, 0.25] 0.8317455657317792
rf_searchParam n_estimators: 57
cat_serachParm 搜索最佳参数  [55, 0.04, 7] 0.8405722770927777
cat_serachParm 搜索最佳参数  [55, 0.04, 8] 0.8438219161750575
rf_searchParam n_estimators: 60
lgb_searchParam 搜索最佳参数 [40, 8, 45, 0.25] 0.8320524744126693
lgb_searchParam 搜索最佳参数 [40, 8, 50, 0.25] 0.8321113046823119
rf_searchParam n_estimators: 65
lgb_searchParam n_estimators: 45
lgb_searchParam 搜索最佳参数 [45, 6, 50, 0.25] 0.8327037263805279
rf_searchParam 搜索最佳参数 ....... over [50, 10, 11] 0.8376590258907053
rf merge model = RandomForestClassifier(max_depth=11, min_samples_split=10, n_estimators=50,
                       oob_score=True, random_state=2020) 第1次验证的f1:0.827250608272506
rf merge model = RandomForestClassifier(max_depth=11, min_samples_split=10, n_estimators=50,
                       oob_score=True, random_state=2020) 第2次验证的f1:0.8592233009708737
rf merge model = RandomForestClassifier(max_depth=11, min_samples_split=10, n_estimators=50,
                       oob_score=True, random_state=2020) 第3次验证的f1:0.8514851485148514
rf merge model = RandomForestClassifier(max_depth=11, min_samples_split=10, n_estimators=50,
                       oob_score=True, random_state=2020) 第4次验证的f1:0.8153846153846153
rf merge model = RandomForestClassifier(max_depth=11, min_samples_split=10, n_estimators=50,
                       oob_score=True, random_state=2020) 第5次验证的f1:0.8349514563106796
rf merge mean f1: 0.8376590258907053
lgb_searchParam n_estimators: 50
cat_serachParm iter_cnt: 60
lgb_searchParam n_estimators: 55
lgb_searchParam 搜索最佳参数 [55, 6, 45, 0.25] 0.8363922109329563
lgb_searchParam n_estimators: 60
lgb_searchParam n_estimators: 65
lgb_searchParam n_estimators: 70
lgb_searchParam 搜索最佳参数 [70, 7, 40, 0.15] 0.8371677320840485
lgb_searchParam 搜索最佳参数 ....... over [70, 7, 40, 0.15] 0.8371677320840485
lgb merge model = LGBMClassifier(is_unbalance=True, learning_rate=0.15, max_depth=7,
               n_estimators=70, num_leaves=40, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第1次验证的f1:0.8272727272727273
lgb merge model = LGBMClassifier(is_unbalance=True, learning_rate=0.15, max_depth=7,
               n_estimators=70, num_leaves=40, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第2次验证的f1:0.8397291196388261
lgb merge model = LGBMClassifier(is_unbalance=True, learning_rate=0.15, max_depth=7,
               n_estimators=70, num_leaves=40, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第3次验证的f1:0.8269662921348314
lgb merge model = LGBMClassifier(is_unbalance=True, learning_rate=0.15, max_depth=7,
               n_estimators=70, num_leaves=40, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第4次验证的f1:0.8497652582159624
lgb merge model = LGBMClassifier(is_unbalance=True, learning_rate=0.15, max_depth=7,
               n_estimators=70, num_leaves=40, objective='binary',
               random_state=2020, reg_alpha=0.3, reg_lambda=0.5, subsample=0.8,
               tree_learner='serial') 第5次验证的f1:0.8421052631578948
lgb merge mean f1: 0.8371677320840485
cat_serachParm iter_cnt: 70
cat_serachParm 搜索最佳参数  [70, 0.05, 6] 0.8439548752985322
cat_serachParm 搜索最佳参数  [70, 0.065, 6] 0.844222664578075
cat_serachParm iter_cnt: 80